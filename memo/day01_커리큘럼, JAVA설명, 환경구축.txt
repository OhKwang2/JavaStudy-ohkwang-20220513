선생님 소개
성함 : 김준일
연락처 : 010-9988-1916
이메일 : skjil1218@kakao.com
깃허브 : https://github.com/code1218

@수업 커리큘럼

	#1월
	20일 - JAVA

	#2월
	10일 - 웹표준
	10일 - JSP 서블릿

	#3월~3.5월
	15일 - Spring
	15일 - Spring Boot

	#3.5~4월
	10일 - 데이터베이스

	#5월
	20일 - 프로젝트

@01 수업
- 기본사항

	#Program이란 무엇인가?
	- 짜여진 '스케쥴의 순서대로 실행'되는 것
	- 언어란? 컴퓨터와 대화하기 위한 언어
	- 웹개발에서는 JAVA 언어 사용
	
	#기계어
	- 0 or 1 : 컴퓨터가 이해할 수 있는 언어 이진수 명령어(vinary code)
	- 전기 on/off에 따라 이해 (ex - 전등)
	- 기본적으로 Assembly Language가 있지만, 컴퓨터 구조에 대해 이해하고 있어야 사용 가능
	  (CPU에서 연산이 어떻게 이루어지는지, 메모리에서 실행되는 위치 등 다 알아야 함)

	#고급언어
	- C, JAVA(스크립트 언어 - 전체 통번역), Python(인터프리터 언어 - 순차적 번역)
	- 비교적 사람이 알아들을 수 있는 언어로 되어 있음.

	#컴파일러
	- 사람의 언어로 명령한 소스 코드를 컴퓨터가 알아 듣도록 번역해주는 역할
	
- JAVA란?

	#자바 개발자
	- 제임스 고슬링
	- Write Once Run Anywhere (한번 작성하면 어디서든지 실행된다.)

	#C언어, C++언어 소스코드
	- 윈도우, 리눅스, 맥, 안드로이드 등 OS 환경이 다르고, OS에서 사용하는 컴파일러도 다르게 구성해야 함.
	- C언어, C++언어는 OS환경이 바뀌면 컴파일러도 다르게 구성해야 함.
	- 장치가 달라지면 그에 맞게 프로그램도 축소해야 함.

	#JVM
	- 바이트 코드로 컴파일 (모든 운영체제에 맞게 컴파일 해줌)

	#객체지향 언어
	- 클래스 로딩
	- 메모리 
	- 컴파일
	-> 빌드 (링크 - (여러개의 소스코드) - 컴파일시 obj파일이 생김 - 여러개의 obj파일을 연결하는 것이 링커) - 링커로 연결된 파일이 exe파일) -> 여러개의 파일이 연결되다보니 용량이 커짐)
	-> 

	- 객체지향 (JVM에서 필요한 객체를 필요에따라 동적으로 불러와서 메모리를 활용)
	- 동적으로 프로그램을 불러오기 때문에 메모리를 관리할 수 있음

	#가비지 컬렉터
	- 동적 메모리 관리에 따른 쓰레기값 자동 수거
	- C, C++ 언어에서는 메모리 관리를 수동적으로 해야 함.
	- 메모리에서 사용하지 않는 프로그램을 자동으로 제거

- 개발환경
안드로이드, 웹개발, 어플리케이션 개발(PC에서 돌아가는 프로그램) 가능
웹개발은 서버(백엔드) 파트에서 사용

	#JDK 11 설치
	오라클 공식 홈페이지에서는 회원가입 필요
	선생님 공유 홈페이지에서 다운 가능
	https://sites.google.com/view/kji-java/index
	JDK 11 다운로드 후 설치 (쭉 NEXT)

	#JDK 설치 확인
	cmd 창에서 java --version 실행

	#IDE (Spring Eclips 설치)
	
	
	#JAVA 통합 개발환경 구축
	- IDE(JDK를 가지고 JAVA를 개발할 수 있는 환경) - JDK( - JRE - JVM)
	- IDE ( 문법 오류, 자동생성, 모듈설치 등 가능하도록 도와주는 통합개발환경)
	- eclips 사용
	- spring.io -> projects -> spring tools 4 -> 4.14.1 버전 OS 환경에 맞춰 다운
	- 작업 폴더는 C: -> junil -> workspace, 설치파일 폴더 생성
	※ jar파일 확장자가 안 나올경우
	jarfix (https://johann.loefflmann.net/en/software/jarfix/index.html) 다운로드 후 실행
	연결프로그램으로 java 연결
	- 설치된 파일을 상위 폴더로 이동 (접근 경로가 무조건 전체 영어여야 함.)
	
	#JDK 환경변수 설정
	- https://prolite.tistory.com/975 참고
	- 내PC-> 마우스 우클릭 -> 속성 -> 우측에 고급 설정 -> 고급 -> 환경변수 설정
	  환경변수 -> 시스템 변수 -> 새로만들기 -> JAVA_HOME, 디렉토리 설정 후 생성
	  -> Path 편집 -> 새로만들기 -> %JAVA_HOME%\bin -> 확인
	  -> 새로만들기 -> CLASSPATH, %JAVA_HOME%\lib 생성 -> 최종 확인
	- cmd -> java --version 확인 -> 버전 정보 정상 표출되면 설정 완료

	#SpringToolSuite4 실행
	- browser -> workspace 선택 -> 실행 (workspace 폴더의 .metadata 폴더에 세팅값 저장됨)
	- window -> Preferences -> encoding 검색 -> General -> Content Types -> Java Class File -> Default encoding에 UTF-8입력 후 업데이트 실행
	- window -> Preferences -> encoding 검색 -> General -> Content Types -> Text의 자바로 시작하는 3가지에 UTF-8입력 후 업데이트
	- window -> Preferences -> encoding 검색 -> General -> Workspace -> 하단의 Text file encoding에서 other 클릭 후 UTF-8로 변경 최종 apply

	#글꼴 설정
	- 구글에서 d2coding 검색(https://github.com/naver/d2codingfont) ->  1.3.2 버전 다운로드 -> D2CodingAll 실행하여 설치
	- window -> Preferences ->fonts 검색 -> colors and fonts -> basig -> text editor, text font에서 d2coding 폰트 저장 -> apply

	#프로젝트 생성
	- file -> new java project -> Project name 입력 -> default JRE선택 -> Module 체크 해제 후 Finish
	#패키지 생성
	- src 마우스 우클릭 -> 패키지 생성

	#Class 생성 (클래스 시작은 첫 문자 무조건 대문자
	- 패키지 마우스 우클릭 -> Class (public static void main 체크) 생성

	#window -> Preferences -> console 입력 -> console -> buffer size에 0하나 더 붙여서 저장