@변수
	#변수란?
	- 말 그대로 변하는 수
	- 자료형 + 변수명으로 이루어짐

	#변수명
	- 변수 이름은 영문자(대문자, 소문자)나 숫자를 사용할 수 있다.
	- 특수문자 중에는 $, _만 사용할 수 있다.
	  ex) 자료형 g_Level
	- 변수 이름은 숫자로 시작할 수 없다.
	  ex) 자료형 27day; 사용 불가
	- 자바에서 이미 사용중인 예약어는 사용할 수 없다.
	  ex) while, if, for 등 예약어 사용 불가

	#카멜 표기법_myName
	- dqwdTdwdQddsd

	#헝가리안 표기법
	- c_key, l_data, n_input
	- 고자안인 찰스 시모니가 헝가리인이여서 헝가리안 표기법이라 불림
	- 변수의 자료형을 접두어에 붙이는 표기법

	#자료형 + 변수명
	- 선언과 초기화
	  ex) int level; level = 10; 값을 대입하는 작업을 초기화
	      int level = 10; 선언과 초기화 동시에

	#메모리
	- 변수와 메모리의 관계
	- 변수는 컴퓨터 내부의 메모리 공간에 저장된다.

	#10진수, 2진수
	- 10진수 : 0,1,2,3,4,5,6,7,8,9,10
	- 2진수 : 0000, 0001, 0010, 0011, 0100,
	- 8진수 : 0,1,2,3,4,5,6,7,10,11,12,13,14,15
	- 16진수 : 0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F,10,11,12

	#비트
	- 0또는 1의 값을 저장하기 위한 최소 단위
	  1bit가 가지는 총 경우의 수는 0과 1, 두 가지이다.

	#바이트
	- 웹 전송은 바이트 단위
	- 8bit를 한 단위로 표준화한 요량 단위
	  1byte가 나타낼 수 있는 총 경우의 수
	  00000000 ~ 11111111 -> 1*2*2*2*2*2*2*2 = 2^7

@자료형
	
	#자료형의 종류
	- boolean 논리형(1bit) : true or false
	- char 문자형(2byte) : 0 ~ 65,535	기본값 : \u0000
	- byte 정수형(1byte) : -128 ~ 127
	- short 정수형(2byte) : -32,768 ~ 32,767
	- int 정수형(4byte) : -2,147,483,648 ~ 2,147,483,647
	- long 정수형(8byte) : -???? ~ ????
	  long num = 00000L; <- 뒤에 L이 들어감.
	- float 실수형(4byte) : -3.4E38 ~ +3.4E38
	  float num =00000F; <- 뒤에 F가 들어감.
	- double 실수형(8byte) : -1.7E308 ~ +1.7E308

@문자코드
	#아스키코드
	- 키보드로 나타낼 수 있는 127자리 수 (영어만)
	  'A' = 65
	#유니코드
	- 한국어, 일본어, 중국어 등 다양한 언어를 포함할 수 있는 코드

@문자열
	#문자열 표현
	String 변수명 = "0000";

@상수
	#상수란?
	- 항상 변하지 않는 수

@리터럴
	#리터럴(리터럴 상수)이란?
	- 이미 정의되어 있는 값을 의미 (숫자들, 입력하고난 값들)

@형변환
	#업캐스팅
	- 값이 작은 범위에서 큰 범위로의 형 변환
	- 묵시적 형 변환 (형 변환 타입 생략 가능)
	문자 -> 정수 -> 실수

	#다운캐스팅
	- 값이 큰 범위에서 작은 범위로의 형 변환
	- 명시적 형 변환(형 변환 타입 생략 불가능)
	실수 -> 정수 -> 문자








